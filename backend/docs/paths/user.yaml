openapi: 5.0.1
info:
  title: User API
  description: A CRUD API for managing users.
  version: 1.0.0

/users:
  get:
    tags:
      - users
    summary: Get all users.
    description: Retrieves a list of all users.
    responses:
      "200":
      description: A list of all users.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
  post:
    tags:
      - users
    summary: Create a new user.
    description: Add a new user.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    responses:
      "201":
        description: User created successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

/users/{id}:
  get:
    tags:
      - users
    summary: Get a user by ID.
    description: Retrieves a single user based on the user ID.
    parameters:
      - name: id
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
    responses:
      "200":
        description: A user object.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      "404":
        description: user not found.
  put:
    tags:
      - users
    summary: Update a user by ID.
    description: Update an existing user details based on user ID.
    parameters:
      - name: id
        in: path
        description: The unique ID of the user.
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    responses:
      "200":
        description: user updated successfully.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      "404":
        description: user not found.
  delete:
    tags:
      - users
    summary: Delete a user by ID.
    description: Delete an existing user based on user ID.
    parameters:
      - name: id
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
    responses:
      "204":
        description: user deleted successfully.
      "404":
        description: user not found.
